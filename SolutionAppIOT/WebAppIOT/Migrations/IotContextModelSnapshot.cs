// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WebAppIOT.Models;

namespace WebAppIOT.Migrations
{
    [DbContext(typeof(IotContext))]
    partial class IotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAppIOT.Models.CapteurSenario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Link_num");

                    b.Property<int>("Link_type");

                    b.Property<int>("Seuil");

                    b.HasKey("ID");

                    b.ToTable("CapteurSenario");
                });

            modelBuilder.Entity("WebAppIOT.Models.Chambre", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Lastlogin");

                    b.Property<string>("Name");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Chambre");
                });

            modelBuilder.Entity("WebAppIOT.Models.Equipement", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChambreID");

                    b.Property<string>("Gpio");

                    b.Property<string>("Name");

                    b.Property<string>("Type");

                    b.Property<int>("value");

                    b.HasKey("ID");

                    b.HasIndex("ChambreID");

                    b.ToTable("Equipement");
                });

            modelBuilder.Entity("WebAppIOT.Models.Senario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Active");

                    b.Property<int>("CapteurSenarioID");

                    b.Property<DateTime>("temps");

                    b.HasKey("ID");

                    b.HasIndex("CapteurSenarioID");

                    b.ToTable("Senario");
                });

            modelBuilder.Entity("WebAppIOT.Models.Senario_Equipement", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EquipementID");

                    b.Property<int>("SenarioID");

                    b.Property<int>("value");

                    b.HasKey("ID");

                    b.HasIndex("EquipementID");

                    b.HasIndex("SenarioID");

                    b.ToTable("Senario_Equipement");
                });

            modelBuilder.Entity("WebAppIOT.Models.SuperUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Lastlogin");

                    b.Property<string>("Name");

                    b.Property<string>("login");

                    b.Property<string>("pwd");

                    b.HasKey("ID");

                    b.ToTable("SuperUser");
                });

            modelBuilder.Entity("WebAppIOT.Models.System", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Ip");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name");

                    b.Property<int>("SuperUserID");

                    b.HasKey("ID");

                    b.HasIndex("SuperUserID");

                    b.ToTable("System");
                });

            modelBuilder.Entity("WebAppIOT.Models.Technicien", b =>
                {
                    b.Property<int>("TechnicienId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cin");

                    b.Property<string>("LastName");

                    b.Property<string>("Name");

                    b.HasKey("TechnicienId");

                    b.ToTable("Technicien");
                });

            modelBuilder.Entity("WebAppIOT.Models.Technicien_System", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ReglageDate");

                    b.Property<string>("ReglageType");

                    b.Property<int>("SystemID");

                    b.Property<int>("TechnicienID");

                    b.HasKey("ID");

                    b.HasIndex("SystemID");

                    b.HasIndex("TechnicienID");

                    b.ToTable("Technicien_System");
                });

            modelBuilder.Entity("WebAppIOT.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Lastlogin");

                    b.Property<string>("Name");

                    b.Property<int>("SystemID");

                    b.Property<string>("login");

                    b.Property<string>("pwd");

                    b.HasKey("ID");

                    b.HasIndex("SystemID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebAppIOT.Models.Chambre", b =>
                {
                    b.HasOne("WebAppIOT.Models.User", "User")
                        .WithMany("Chambres")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebAppIOT.Models.Equipement", b =>
                {
                    b.HasOne("WebAppIOT.Models.Chambre", "Chambre")
                        .WithMany("Equipemets")
                        .HasForeignKey("ChambreID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebAppIOT.Models.Senario", b =>
                {
                    b.HasOne("WebAppIOT.Models.CapteurSenario", "CapteurSenario")
                        .WithMany("Senarios")
                        .HasForeignKey("CapteurSenarioID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebAppIOT.Models.Senario_Equipement", b =>
                {
                    b.HasOne("WebAppIOT.Models.Equipement", "Equipement")
                        .WithMany("Senario_Equipements")
                        .HasForeignKey("EquipementID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebAppIOT.Models.Senario", "Senario")
                        .WithMany("Equipemets")
                        .HasForeignKey("SenarioID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebAppIOT.Models.System", b =>
                {
                    b.HasOne("WebAppIOT.Models.SuperUser", "SuperUser")
                        .WithMany("Systems")
                        .HasForeignKey("SuperUserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebAppIOT.Models.Technicien_System", b =>
                {
                    b.HasOne("WebAppIOT.Models.System", "System")
                        .WithMany("Technicien_Systems")
                        .HasForeignKey("SystemID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebAppIOT.Models.Technicien", "Technicien")
                        .WithMany("Technicien_Systems")
                        .HasForeignKey("TechnicienID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebAppIOT.Models.User", b =>
                {
                    b.HasOne("WebAppIOT.Models.System", "System")
                        .WithMany("users")
                        .HasForeignKey("SystemID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
